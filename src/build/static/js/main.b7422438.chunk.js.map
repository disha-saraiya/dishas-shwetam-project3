{"version":3,"sources":["components/Navigation.js","components/Post.js","components/Home.js","components/Login.js","components/Signup.js","components/NewPost.js","App.js","index.js"],"names":["Navigation","className","Navbar","collapseOnSelect","sticky","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Post","props","Card","bg","text","Header","username","Body","Title","postTitle","Text","content","Button","Footer","Home","useState","allPosts","setPosts","useEffect","setTimeout","Axios","get","then","res","console","log","data","posts","catch","error","map","post","title","description","Login","require","form","setForm","errors","setErrors","setField","field","value","handleSubmit","e","preventDefault","newErrors","email","password","findFormErrors","Object","keys","length","alert","response","Form","Group","controlId","Label","Control","type","placeholder","onChange","target","isInvalid","Feedback","onClick","Signup","default","firstName","emailId","userName","confirmPassword","Row","Col","NewPost","url","axios","as","rows","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7422438.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css'; \r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nfunction Navigation(){\r\n\r\n    return(\r\n        <div className = \"navigation\">\r\n            <div className=\"row\">\r\n                <div className = \"col-md-12\">            \r\n                <Navbar collapseOnSelect sticky=\"top\" variant = \"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">The Wellness Forum</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/new\">New</Nav.Link>\r\n                        <Nav.Link href=\"link\">Threads</Nav.Link>\r\n                        <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                        <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n                    </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n    </Navbar>\r\n    </div>\r\n        </div>\r\n</div>\r\n\r\n        )\r\n}\r\n\r\nexport default Navigation; ","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap'; \r\nimport '../App.css'\r\n\r\nfunction Post(props){\r\n    return(\r\n        <div className = \"home_container\">\r\n        <div className = \"posts_container\">\r\n            <Card bg=\"light\" text=\"info\" className=\"post_card text-center\">\r\n            <Card.Header>{props.username}</Card.Header>\r\n            <Card.Body>\r\n            <Card.Title>{props.postTitle}</Card.Title>\r\n            <Card.Text>\r\n                {props.content}\r\n            </Card.Text>\r\n            <Button variant=\"primary\">Report Post</Button>\r\n            <Button variant = \"primary\"> Hide Post </Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n            </Card>\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Post; ","import React, {useState, useEffect} from 'react';\r\nimport Post from './Post';\r\n\r\nimport Axios from 'axios'; \r\n\r\n\r\nfunction Home(){\r\n\r\nconst [allPosts, setPosts] = useState([]);  \r\n//Get method on all the posts \r\n//Map out each post and it's content, title, username and send it as props to the Post component. \r\n\r\nuseEffect(() => {\r\n\r\n  setTimeout(() => {\r\n    Axios.get('http://localhost:3000/api/posts/get').then((res) => {\r\n    console.log(res); \r\n    setPosts(res.data.posts) \r\n  }).catch(error => console.error(error));\r\n  }, 1000)\r\n}, [])\r\n\r\nreturn(\r\n  <div className = \"home_container\">\r\n  <div className = \"posts_container\">\r\n\r\n     {allPosts.map((post) => {\r\n       return(\r\n         <div>\r\n         <Post postTitle = {post.title} content = {post.description} username = \"username\"/>\r\n         </div>\r\n       ) \r\n     })} \r\n\r\n  </div>\r\n  </div>   \r\n)\r\n}\r\nexport default Home; ","import React, {useState, useEffect} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport '../App.css'; \r\nimport Axios from 'axios'; \r\n\r\n\r\nfunction Login(){\r\n    const jwt = require('jsonwebtoken');\r\n\r\n    //Holds they key pair value for each of our form fields.\r\n    const [form, setForm] = useState({}); \r\n    const [errors, setErrors] = useState({});\r\n\r\n    //Function to update state of the form\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form, \r\n            [field]: value\r\n        })\r\n        // Check and see if errors exist, and remove them from the error object:\r\n        if ( !!errors[field] ) setErrors({\r\n                ...errors,\r\n                [field]: null\r\n        })\r\n\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n            const {email, password} = form\r\n            const newErrors = {} \r\n\r\n            if(!email || email === '') newErrors.email = \"Email ID cannot be blank.\"\r\n            //TODO : add username unique check \r\n            \r\n            if(!password || password === '') newErrors.password = \"Password cannot be blank.\"\r\n            return newErrors\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const newErrors = findFormErrors()\r\n        \r\n        //console.log(newErrors); \r\n\r\n        if(Object.keys(newErrors).length > 0){\r\n            setErrors(newErrors)\r\n            \r\n        }else{\r\n            //TODO: write form submission to API logic here\r\n            alert('Form is correct, submitting to API');   \r\n            console.log(form); \r\n            \r\n            Axios.post('http://localhost:3000/api/login', form).then(function(response) {\r\n                console.log(response);\r\n\r\n            }).catch(function(error){\r\n                console.log(error); \r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className = \"home_container\">\r\n\r\n            <div id=\"login\" className = \"login_container\">\r\n            <h3> Login to The Wellness Forum </h3>\r\n\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n            onChange = {e => setField('email', e.target.value)} isInvalid={!!errors.email} />\r\n            <Form.Control.Feedback type = \"invalid\" > {errors.email} </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" \r\n            onChange = {e => setField('password', e.target.value)} isInvalid={!!errors.password} />\r\n            <Form.Control.Feedback type = \"invalid\" > {errors.password} </Form.Control.Feedback>\r\n\r\n            </Form.Group>\r\n\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick = {(e) => handleSubmit(e)}>\r\n                Login\r\n            </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Login; ","import React, {useState} from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Axios from 'axios'; \r\n\r\n\r\n//https://dev.to/alecgrey/controlled-forms-with-front-and-backend-validations-using-react-bootstrap-5a2\r\nfunction Signup(){\r\n    const axios = require('axios').default;\r\n\r\n    //Holds they key pair value for each of our form fields.\r\n    const [form, setForm] = useState({}); \r\n    const [errors, setErrors] = useState({});\r\n\r\n    //Function to update state of the form\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form, \r\n            [field]: value\r\n        })\r\n        // Check and see if errors exist, and remove them from the error object:\r\n        if ( !!errors[field] ) setErrors({\r\n                ...errors,\r\n                [field]: null\r\n        })\r\n\r\n    }\r\n\r\n    const findFormErrors = () => {\r\n            const {firstName, emailId, userName, password, confirmPassword} = form\r\n            const newErrors = {} \r\n\r\n            if(!firstName || firstName === '') newErrors.firstName = \"First name cannot be blank.\"\r\n            if(!emailId || emailId === '') newErrors.emailId = \"Email ID cannot be blank.\"\r\n            if(!userName || userName === '') newErrors.userName = \"Username cannot be blank.\"\r\n            //TODO : add username unique check \r\n            \r\n            if(!password || password === '') newErrors.password = \"Password cannot be blank.\"\r\n            if(password !== confirmPassword) newErrors.confirmPassword = \"Passwords do not match! Please enter the correct password\"\r\n\r\n            return newErrors\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const newErrors = findFormErrors()\r\n        \r\n        console.log(newErrors); \r\n\r\n        if(Object.keys(newErrors).length > 0){\r\n            setErrors(newErrors)\r\n            \r\n        }else{\r\n            //TODO: write form submission to API logic here\r\n            alert('Form is correct, submitting to API'); \r\n\r\n            Axios.post('http://localhost:3000/api/create', form).then(function(response) {\r\n                console.log(response);\r\n            }).catch(function(error){\r\n                console.log(error); \r\n            });       \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3> Welcome to The Wellness Forum </h3>\r\n            <h4> Create an account </h4>\r\n            <div className = \"container\">\r\n            <Form>\r\n\r\n            <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Row>\r\n            <Col>\r\n            <Form.Control placeholder=\"First name\" type = \"text\" \r\n            onChange = {e => setField('firstName', e.target.value)} isInvalid={!!errors.firstName} />\r\n            <Form.Control.Feedback type = \"invalid\" > {errors.firstName} </Form.Control.Feedback>\r\n             </Col>\r\n            <Col>\r\n            <Form.Control placeholder=\"Last name\" type = \"text\" onChange = {e => setField('lastName', e.target.value)} />\r\n            </Col>\r\n            </Row>\r\n            </Form.Group>\r\n\r\n            <br />\r\n        \r\n            <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n            onChange = {e => setField('emailId', e.target.value)} isInvalid = {!!errors.emailId} />\r\n            <Form.Control.Feedback type = \"invalid\">{errors.emailId}</Form.Control.Feedback>\r\n            <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n            </Form.Text>\r\n            </Form.Group>\r\n\r\n        \r\n            <Form.Group>\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"username\" placeholder=\"Enter a username\"  \r\n            onChange = {e => setField('userName', e.target.value)} isInvalid = {!!errors.userName} />\r\n            <Form.Control.Feedback type = \"invalid\"> {errors.userName} </Form.Control.Feedback>\r\n            <Form.Text className=\"text-muted\">\r\n                Select a funky username, something you love!\r\n            </Form.Text>\r\n            </Form.Group>\r\n\r\n\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" \r\n            onChange = {e => setField('password', e.target.value)} isInvalid = {!!errors.password} />\r\n            <Form.Control.Feedback type =\"invalid\"> {errors.password} </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            \r\n            <Form.Group>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm Password\" \r\n            onChange = {e => setField('confirmPassword', e.target.value)} isInvalid = {!! errors.confirmPassword} />\r\n            <Form.Control.Feedback type = \"invalid\"> {errors.confirmPassword} </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n\r\n            <Button type=\"submit\" onClick = {(e) => handleSubmit(e)}>\r\n                Sign me up!\r\n            </Button>\r\n\r\n\r\n            </Form>\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Signup; ","import axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'; \r\nimport '../App.css'; \r\n\r\nfunction NewPost(){\r\n\r\n        //Holds they key pair value for each of our form fields.\r\n        const [form, setForm] = useState({}); \r\n        const [errors, setErrors] = useState({});\r\n    \r\n        //Function to update state of the form\r\n        const setField = (field, value) => {\r\n            setForm({\r\n                ...form, \r\n                [field]: value\r\n            })\r\n            // Check and see if errors exist, and remove them from the error object:\r\n            if ( !!errors[field] ) setErrors({\r\n                    ...errors,\r\n                    [field]: null\r\n            })\r\n    \r\n        }\r\n    \r\n        const findFormErrors = () => {\r\n                const {title, url, description} = form\r\n                const newErrors = {} \r\n    \r\n                if(!title || title === '') newErrors.title = \"Title cannot be blank.\"\r\n                \r\n                if(url && description) newErrors.content = \"You cannot write the post and provide the URL, please only do either!\"\r\n                if(!url && !description) newErrors.content = \"Please provide a URL or write your post.\"\r\n\r\n                return newErrors\r\n        }\r\n\r\n        const handleSubmit = e => {\r\n            e.preventDefault()\r\n    \r\n            const newErrors = findFormErrors()\r\n            \r\n            // console.log(newErrors); \r\n    \r\n            //If there is no description, replace the URL with the description.\r\n            if(!form.description){\r\n                form.description = form.url; \r\n            }\r\n\r\n\r\n            if(Object.keys(newErrors).length > 0){\r\n                setErrors(newErrors)\r\n            }else{\r\n                alert('Form is correct, submitting to API');\r\n                \r\n                axios.post('http://localhost:3000/api/posts/create', {\r\n                    title: form.title,\r\n                    description: form.description\r\n                }).then(function(res) {\r\n                    console.log(res);\r\n                }).catch(function(error){\r\n                    console.log(error); \r\n                })\r\n            }\r\n        } \r\n\r\n\r\n        \r\n    return(\r\n        <div className = \"home_container\">\r\n           <div className = \"new_post_container\">\r\n            <h3> Create a new post </h3>\r\n\r\n            <Form>\r\n\r\n            <Form.Group>\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter the title of your post\" \r\n            onChange = {e => setField('title', e.target.value)} isInvalid = {!!errors.title}/>\r\n            <Form.Control.Feedback type = \"invalid\" > {errors.title} </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId = \"ControlTextarea\">\r\n                <Form.Label> Type your thoughts! </Form.Label>\r\n                <Form.Control as=\"textarea\" rows = {6} placeholder = \"This is where I would type how much I love The Wellness Forum, for example...\" \r\n                onChange = {e => setField('description', e.target.value)} isInvalid = {!!errors.content}/>\r\n                <Form.Control.Feedback type = \"invalid\"> {errors.content} </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>URL to your post</Form.Label>\r\n                <Form.Control type = \"link\" placeholder = \"Enter the URL to your post\" \r\n                onChange = {e => setField('url', e.target.value)} isInvalid = {!!errors.content} />\r\n                <Form.Control.Feedback type = \"invalid\"> {errors.content} </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n\r\n\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick = {e => handleSubmit(e)}>\r\n                Post\r\n            </Button>\r\n            </Form>\r\n           </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default NewPost; ","import './App.css';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Login from './components/Login'; \nimport Signup from './components/Signup'; \nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n} from 'react-router-dom';\nimport NewPost from './components/NewPost';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Router>\n      <Switch>\n        <Route exact path = \"/\"><Home /></Route>\n        <Route path = \"/login\"><Login /></Route>\n        <Route path = \"/signup\"><Signup /></Route>\n        <Route path = \"/new\"><NewPost /></Route>\n      </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"; \n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}